#!/bin/bash

function check_ip() {

  local ip=$1
  local stat=1

  if [[ $1 =~ [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3} ]]; then
    OIFS=$IFS
    IFS='.'
    ip=($ip)
    IFS=$OIFS
    [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
    stat=$?
  fi

  return $stat
}

function cal_ip_range() {

  local ip_1=$1
  local ip_2=$2

  OIFS=$IFS
  IFS='.'
  ip_1=($ip_1)
  ip_2=($ip_2)
  IFS=$OIFS
  ip_range=`seq -f "${ip_1[0]}.${ip_1[1]}.${ip_1[2]}.%g" ${ip_1[3]} ${ip_2[3]}`

}

function create_log_file() {

  if [[ ! -z $1 && ! -z $2 ]]; then
    ips="$1-$2"
    log_file="$ips.result"
  else
    log_file="$1.result"
  fi

  if [ ! -f $log_file ]; then
    touch $log_file
  else
    if [ -s $log_file ] && [ ! -f $log_file-tmp ]; then
      touch $log_file-tmp
    fi
  fi

  if [ ! -s $log_file ]; then
    dynamic_log=$log_file
  else
    dynamic_log=$log_file-tmp
  fi

}

function scan() {

  port_range="20 21 22 25 53 80 443"

  if [[ ! -z $ip_range ]]; then 
    range=$ip_range
  else
    range=$1
  fi

  for ip in $range 
  do

    for port in $port_range
    do

      output=`nc -zv -w 1 $ip $port 2>&1`

      if [ $? -eq 0  ]; then
        echo $output >> $dynamic_log
      fi

    done

  done

  if [ -f $log_file-tmp ]; then

    diff_result=`diff -q $log_file $log_file-tmp 2>&1`

    if [ -z "$diff_result" ]; then
      rm -f $log_file-tmp
      echo "No new result of IP scan"
    else
      cat $log_file-tmp > $log_file
      rm -f $log_file-tmp
      echo "New result of IP scan:"
      cat $log_file
    fi

  else

    echo "Result of IP scan:"
    cat $log_file

  fi

}

if [[ ! -z $1 && ! -z $2 ]]; then
  echo "Two agruments where declared"
  ip1=$1
  ip2=$2
  if check_ip $1 && check_ip $2; then
    create_log_file $1 $2
    cal_ip_range $1 $2
    scan $ip_range
  else
    echo "IPs are not valid"
  fi
else
  echo "One argument was declared"
  if check_ip $1; then
    create_log_file $1
    scan $1
  else
    echo "IP is not valid"
  fi
fi















































